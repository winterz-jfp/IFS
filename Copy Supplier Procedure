PROCEDURE Copy_Supplier (
    source_supplier_        varchar2,
    source_company_         varchar2,
    destination_            varchar2
);

PROCEDURE Copy_Supplier (
    source_supplier_        varchar2,
    source_company_         varchar2,
    destination_            varchar2
) IS

    company_                varchar2(50);
    supplier_               varchar2(50);

    comp_ varchar2(20);
    sup_  varchar2(20);
    way_  varchar2(50);
    addr_id_                varchar(50);
    flag_ number;

    info_                   varchar2(4000);
    objid_                  varchar2(200);
    objversion_             varchar2(200);

    invoice_attr_           varchar2(32000);
    payment_attr_           varchar2(32000);
    pay_way_attr_           varchar2(32000);
    pay_way_attr_GUF_       varchar2(32000);
    payment_address_attr_   varchar2(32000);
    payment_address_attr_GUF_ varchar2(32000);
    tax_info_attr_          varchar2(32000);

    account_                varchar2(50);
    flag2_                  number;

    cursor get_invoice_info is
        select *
        from IDENTITY_INVOICE_INFO
        where company=source_company_ and identity like source_supplier_ and party_type='Supplier';

    cursor get_identity_pay_info is
        select *
        from IDENTITY_PAY_INFO
        where identity = supplier_ and company = company_ and party_type='Supplier';

    cursor get_pay_way is
        select *
        from PAYMENT_WAY_PER_IDENTITY
        where identity = supplier_ and company = company_ and party_type='Supplier';

    Cursor get_pay_address is
        select *
        from PAYMENT_ADDRESS
        where identity = supplier_ and company = company_ and party_type='Supplier';

    Cursor get_new_companies is
        select *
        from company
        where company like destination_||'%' and company not like substr(destination_,1,3)||'000'
        and   company <> company_
        order by company;

    Cursor get_tax_info is
        select *
        from SUPPLIER_DOCUMENT_TAX_INFO
        where supplier_id = supplier_ and company = company_;

    Cursor check_ident_inv_inf is
        select 1
        from IDENTITY_INVOICE_INFO
        where identity = sup_ and company = comp_ and party_type='Supplier';

    Cursor check_ident_pay_info is
        select 1
        from IDENTITY_PAY_INFO
        where identity = sup_ and company = comp_ and party_type='Supplier';

    Cursor check_PAY_WAY_PER_IDENT is
        select 1
        from PAYMENT_WAY_PER_IDENTITY
        where identity = sup_ and company = comp_ and way_id=way_ and party_type='Supplier';

      Cursor check_PAY_WAY_PER_IDENT_GUF is
        select 1
        from PAYMENT_WAY_PER_IDENTITY
        where identity = sup_ and company = comp_ and way_id='SEPA02' and party_type='Supplier';

    Cursor check_Pay_Address is
        select 1
        from PAYMENT_ADDRESS
        where identity = sup_ and company = comp_ and way_id=way_ and address_id=addr_id_ and party_type='Supplier';

    Cursor check_Pay_Address_GUF is
        select 1
        from PAYMENT_ADDRESS
        where identity = sup_ and company = comp_ and way_id='SEPA02' and account=account_ and party_type='Supplier';

    Cursor check_tax_info is
        select 1
        from SUPPLIER_DOCUMENT_TAX_INFO
        where supplier_id = sup_ and company = comp_;

    Begin

        IFSAPP.Language_SYS.Set_Language('en'); -- This requires logged in user to have privileges to Language_SYS.Set_Language
--                dbms_output.put_line(source_company_ || ' - ' || destination_);

        for recinfo_ in get_invoice_info loop

            company_ := recinfo_.company;
            supplier_ := recinfo_.identity;
--dbms_output.put_line('Supplier: ' || supplier_);
            for rec_ in get_new_companies loop
            --INVOICE TAB

                Client_SYS.Clear_Attr(invoice_attr_);
                Client_SYS.Add_To_Attr('COMPANY',                   rec_.company,invoice_attr_);
                Client_SYS.Add_To_Attr('PARTY_TYPE',                recinfo_.party_type,invoice_attr_);
                Client_SYS.Add_To_Attr('IDENTITY_TYPE',             recinfo_.identity_type,invoice_attr_);
                Client_SYS.Add_To_Attr('GROUP_ID',                  recinfo_.group_id,invoice_attr_);
                Client_SYS.Add_To_Attr('DEF_CURRENCY',              recinfo_.def_currency,invoice_attr_);
                Client_SYS.Add_To_Attr('PAY_TERM_ID',               recinfo_.pay_term_id,invoice_attr_);
                Client_SYS.Add_To_Attr('AUTOMATIC_PAY_AUTH_FLAG',   recinfo_.automatic_pay_auth_flag,invoice_attr_);
                Client_SYS.Add_To_Attr('DEF_AUTHORIZER',            recinfo_.def_authorizer,invoice_attr_);
                Client_SYS.Add_To_Attr('DEF_PRELIMINARY_CODE',      recinfo_.def_preliminary_code,invoice_attr_);
                Client_SYS.Add_To_Attr('INVOICE_RECIPIENT',         recinfo_.invoice_recipient,invoice_attr_);
                Client_SYS.Add_To_Attr('INVOICING_SUPPLIER',        recinfo_.invoicing_supplier,invoice_attr_);
                Client_SYS.Add_To_Attr('NCF_REFERENCE_CHECK',       recinfo_.ncf_reference_check,invoice_attr_);
                Client_SYS.Add_To_Attr('IDENTITY',                  recinfo_.identity,invoice_attr_);
                Client_SYS.Add_To_Attr('TAX_LIABILITY',             recinfo_.tax_liability,invoice_attr_);
                Client_SYS.Add_To_Attr('REPORT_AND_WITHHOLD',       recinfo_.report_and_withhold,invoice_attr_);
                Client_SYS.Add_To_Attr('PRINT_TAX_CODE_TEXT',       recinfo_.print_tax_code_text,invoice_attr_);
                Client_SYS.Add_To_Attr('MATCHING_LEVEL',            recinfo_.matching_level,invoice_attr_);
                Client_SYS.Add_To_Attr('AUTOMATIC_INVOICE',         recinfo_.automatic_invoice,invoice_attr_);
                Client_SYS.Add_To_Attr('ALLOW_QUANTITY_DIFF',       recinfo_.allow_quantity_diff,invoice_attr_);
                Client_SYS.Add_To_Attr('PO_REF_REC_REF_VAL_METHOD', recinfo_.po_ref_rec_ref_val_method,invoice_attr_);
                Client_SYS.Add_To_Attr('ALLOW_TOLERANCE',           recinfo_.allow_tolerance,invoice_attr_);
                Client_SYS.Add_To_Attr('CREATE_TOLERANCE_POSTING',  recinfo_.create_tolerance_posting,invoice_attr_);
                Client_SYS.Add_To_Attr('DEF_VAT_CODE',              recinfo_.def_vat_code,invoice_attr_);
                Client_SYS.Add_To_Attr('ROUNDING_TAX_CODE',         recinfo_.rounding_tax_code,invoice_attr_);



                sup_ := recinfo_.identity;
                comp_ := rec_.company;
                flag_ :=0;


                open check_ident_inv_inf;
                fetch check_ident_inv_inf into flag_;
                close check_ident_inv_inf;
                if flag_<>1 Then
                    IFSAPP.IDENTITY_INVOICE_INFO_API.NEW__( info_ , objid_ , objversion_ , invoice_attr_ , 'DO' );
                end if;
--                commit;
            --INVOICE TAB

                for recpay_ in get_identity_pay_info loop
                    --PAYMENT TAB

                    Client_SYS.Clear_Attr(payment_attr_);
                    Client_SYS.Add_To_Attr('COMPANY',                   rec_.company,payment_attr_);
                    Client_SYS.Add_To_Attr('IDENTITY',                  recpay_.identity,payment_attr_);
                    Client_SYS.Add_To_Attr('PARTY_TYPE',                recpay_.party_type,payment_attr_);
                    Client_SYS.Add_To_Attr('INTEREST_TEMPLATE',         recpay_.interest_template,payment_attr_);
                    Client_SYS.Add_To_Attr('PAYMENT_ADVICE',            recpay_.payment_advice,payment_attr_);
                    Client_SYS.Add_To_Attr('PRIORITY',                  recpay_.priority,payment_attr_);
                    Client_SYS.Add_To_Attr('TEMPLATE_ID',               recpay_.template_id,payment_attr_);
                    Client_SYS.Add_To_Attr('NETTING_ALLOWED',           recpay_.netting_allowed,payment_attr_);
                    Client_SYS.Add_To_Attr('BLOCKED_FOR_PAYMENT',       recpay_.blocked_for_payment,payment_attr_);
                    Client_SYS.Add_To_Attr('OUTPUT_MEDIA',              recpay_.output_media,payment_attr_);
                    Client_SYS.Add_To_Attr('CHECK_RECIPIENT',           recpay_.check_recipient,payment_attr_);
                    Client_SYS.Add_To_Attr('IS_ONE_INV_PER_PAY_DB',     recpay_.is_one_inv_per_pay_db,payment_attr_);
                    Client_SYS.Add_To_Attr('DEFAULT_PAYMENT_METHOD',    recpay_.default_payment_method,payment_attr_);
                    Client_SYS.Add_To_Attr('COMM_ID',                   recpay_.comm_id,payment_attr_);

                    flag_ :=0;

                    open check_ident_pay_info;
                    fetch check_ident_pay_info into flag_;
                    close check_ident_pay_info;
                    if flag_<>1 Then
                        IFSAPP.IDENTITY_PAY_INFO_API.NEW__( info_ , objid_ , objversion_ , payment_attr_ , 'DO' );
                    end if;
--                    commit;
                end loop;

                for recpw_ in get_pay_way loop
                    --Payment Method

                    Client_SYS.Clear_Attr(pay_way_attr_);
                    Client_SYS.Add_To_Attr('COMPANY',                 rec_.company,pay_way_attr_);
                    Client_SYS.Add_To_Attr('IDENTITY',                recpw_.identity,pay_way_attr_);
                    Client_SYS.Add_To_Attr('PARTY_TYPE',              recpw_.party_type,pay_way_attr_);
                    Client_SYS.Add_To_Attr('PARTY_TYPE_DB',           recpw_.party_type_db,pay_way_attr_);
                    Client_SYS.Add_To_Attr('WAY_ID',                  recpw_.way_id,pay_way_attr_);
                    Client_SYS.Add_To_Attr('DEFAULT_PAYMENT_WAY',     recpw_.default_payment_way,pay_way_attr_);

                    Client_SYS.Clear_Attr(pay_way_attr_GUF_);
                    Client_SYS.Add_To_Attr('COMPANY',                 rec_.company,pay_way_attr_GUF_);
                    Client_SYS.Add_To_Attr('IDENTITY',                recpw_.identity,pay_way_attr_GUF_);
                    Client_SYS.Add_To_Attr('PARTY_TYPE',              recpw_.party_type,pay_way_attr_GUF_);
                    Client_SYS.Add_To_Attr('PARTY_TYPE_DB',           recpw_.party_type_db,pay_way_attr_GUF_);
                    Client_SYS.Add_To_Attr('WAY_ID',                  'SEPA02',pay_way_attr_GUF_);
                    Client_SYS.Add_To_Attr('DEFAULT_PAYMENT_WAY',     recpw_.default_payment_way,pay_way_attr_GUF_);

                    flag_ :=0;
                    flag2_ :=0;
                    way_ := recpw_.way_id;

                    open check_PAY_WAY_PER_IDENT;
                    fetch check_PAY_WAY_PER_IDENT into flag_;
                    close check_PAY_WAY_PER_IDENT;

                    open check_PAY_WAY_PER_IDENT_GUF;
                    fetch check_PAY_WAY_PER_IDENT_GUF into flag2_;
                    close check_PAY_WAY_PER_IDENT_GUF;

                    if rec_.company='GUF005' or rec_.company='GUF007' or rec_.company='GUF016' or rec_.company='FRA020' then
                        if flag2_<>1 then
                        IFSAPP.PAYMENT_WAY_PER_IDENTITY_API.NEW__( info_ , objid_ , objversion_ , pay_way_attr_GUF_ , 'DO' );
                        end if;
                    end if;

                    if rec_.company not in('GUF005' ,'GUF007' ,'GUF016' ,'FRA020') then
                        if flag_<>1 Then
                        IFSAPP.PAYMENT_WAY_PER_IDENTITY_API.NEW__( info_ , objid_ , objversion_ , pay_way_attr_ , 'DO' );
                        end if;
                    end if;
                end loop;
--                commit;

                for recpa_ in get_pay_address loop
                    -- Payment Address

                    Client_SYS.Clear_Attr(payment_address_attr_);
                    Client_SYS.Add_To_Attr('COMPANY',                 rec_.company,payment_address_attr_);
                    Client_SYS.Add_To_Attr('IDENTITY',                recpa_.identity,payment_address_attr_);
                    Client_SYS.Add_To_Attr('PARTY_TYPE',              recpa_.party_type,payment_address_attr_);
                    Client_SYS.Add_To_Attr('WAY_ID',                  recpa_.way_id,payment_address_attr_);
                    Client_SYS.Add_To_Attr('ADDRESS_ID',              recpa_.address_id,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DESCRIPTION',             recpa_.description,payment_address_attr_);
                    Client_SYS.Add_To_Attr('ACCOUNT',                 recpa_.account,payment_address_attr_);
                    Client_SYS.Add_To_Attr('BIC_CODE',                recpa_.bic_code,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DEFAULT_ADDRESS',         recpa_.default_address,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA1',                   recpa_.data1,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA2',                   recpa_.data2,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA3',                   recpa_.data3,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA4',                   recpa_.data4,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA5',                   recpa_.data5,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA6',                   recpa_.data6,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA7',                   recpa_.data7,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA8',                   recpa_.data8,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA9',                   recpa_.data9,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA10',                  recpa_.data10,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA11',                  recpa_.data11,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA12',                  recpa_.data12,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA13',                  recpa_.data13,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA14',                  recpa_.data14,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA15',                  recpa_.data15,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA16',                  recpa_.data16,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA17',                  recpa_.data17,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA18',                  recpa_.data18,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA19',                  recpa_.data19,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA20',                  recpa_.data20,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA21',                  recpa_.data21,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA22',                  recpa_.data22,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA23',                  recpa_.data23,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA24',                  recpa_.data24,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA25',                  recpa_.data25,payment_address_attr_);
                    Client_SYS.Add_To_Attr('DATA26',                  recpa_.data26,payment_address_attr_);
                    Client_SYS.Add_To_Attr('BLOCKED_FOR_USE',         recpa_.blocked_for_use,payment_address_attr_);

                    Client_SYS.Clear_Attr(payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('COMPANY',                 rec_.company,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('IDENTITY',                recpa_.identity,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('PARTY_TYPE',              recpa_.party_type,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('WAY_ID',                  'SEPA02',payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('ADDRESS_ID',              recpa_.address_id,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DESCRIPTION',             recpa_.description,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('ACCOUNT',                 recpa_.account,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('BIC_CODE',                recpa_.bic_code,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DEFAULT_ADDRESS',         recpa_.default_address,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA1',                   recpa_.data1,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA2',                   recpa_.data2,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA3',                   recpa_.data3,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA4',                   recpa_.data4,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA5',                   recpa_.data5,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA6',                   recpa_.data6,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA7',                   recpa_.data7,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA8',                   recpa_.data8,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA9',                   recpa_.data9,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA10',                  recpa_.data10,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA11',                  recpa_.data11,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA12',                  recpa_.data12,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA13',                  recpa_.data13,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA14',                  recpa_.data14,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA15',                  recpa_.data15,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA16',                  recpa_.data16,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA17',                  recpa_.data17,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA18',                  recpa_.data18,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA19',                  recpa_.data19,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA20',                  recpa_.data20,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA21',                  recpa_.data21,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA22',                  recpa_.data22,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA23',                  recpa_.data23,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA24',                  recpa_.data24,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA25',                  recpa_.data25,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('DATA26',                  recpa_.data26,payment_address_attr_GUF_);
                    Client_SYS.Add_To_Attr('BLOCKED_FOR_USE',         recpa_.blocked_for_use,payment_address_attr_GUF_);

                    flag_ :=0;
                    flag2_ :=0;
                    way_ := recpa_.way_id;
                    addr_id_ := recpa_.address_id;
                    account_ :=recpa_.account;

                    open check_Pay_Address;
                    fetch check_Pay_Address into flag_;
                    close check_Pay_Address;

                    open check_Pay_Address_GUF;
                    fetch check_Pay_Address_GUF into flag2_;
                    close check_Pay_Address_GUF;


                    if rec_.company in ('GUF005', 'GUF007', 'GUF016', 'FRA020') then
                        if flag2_<>1 then
                        IFSAPP.PAYMENT_ADDRESS_API.NEW__( info_ , objid_ , objversion_ , payment_address_attr_GUF_ , 'DO' );
                        end if;
                    end if;

                    if rec_.company not in ('GUF005', 'GUF007', 'GUF016', 'FRA020') then
                        if flag_<>1 Then
                        IFSAPP.PAYMENT_ADDRESS_API.NEW__( info_ , objid_ , objversion_ , payment_address_attr_ , 'DO' );
                        end if;
                    end if;
                end loop;
--                commit;

                for rectaxinfo_ in get_tax_info loop
                    -- Document Tax Info (Tax Id)

                    Client_SYS.Clear_Attr(tax_info_attr_);
                    Client_SYS.Add_To_Attr('COMPANY',                 rec_.company,tax_info_attr_);
                    Client_SYS.Add_To_Attr('SUPPLIER_ID',             rectaxinfo_.supplier_id,tax_info_attr_);
                    Client_SYS.Add_To_Attr('ADDRESS_ID',              rectaxinfo_.address_id,tax_info_attr_);
                    Client_SYS.Add_To_Attr('TAX_ID_TYPE',             rectaxinfo_.tax_id_type,tax_info_attr_);
                    Client_SYS.Add_To_Attr('VAT_NO',                  rectaxinfo_.vat_no,tax_info_attr_);

                    sup_ := rectaxinfo_.supplier_id;
                    comp_ := rec_.company;
                    flag_ :=0;

                    open check_tax_info;
                    fetch check_tax_info into flag_;
                    close check_tax_info;
                    if flag_<>1 Then
                        IFSAPP.SUPPLIER_DOCUMENT_TAX_INFO_API.NEW__( info_ , objid_ , objversion_ , tax_info_attr_ , 'DO' );
                    end if;
                end loop;
--                commit;
            end loop;
        end loop;
--        commit;
--    end loop;
    End Copy_Supplier;
